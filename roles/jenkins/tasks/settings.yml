---
- name: "Ensure necessary dirs"
  file:
    path:  "{{ item }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0755
    # follow: true
  with_items:
    - "{{ jenkins_download_dir }}"
    - "{{ jenkins_apps_dir }}"
    - "{{ jenkins_home_dir }}"
    - "{{ jenkins_plug_dir }}"
    - "{{ jenkins_work_dir }}"
    - "{{ jenkins_war_dir }}"
    - "{{ tools_dir }}"

- name: "Ensure jenkins.war {{ jenkins_version }} is copied from ansible controller"
  copy:
    src:  "./files/{{ jenkins_version }}/jenkins.war"
    dest: "{{ jenkins_download_dir }}"

- name: Copy jenkins.war from {{ jenkins_download_dir }} to {{ jenkins_apps_dir }}
  copy:
    remote_src: yes
    src:   "{{ jenkins_download_dir }}/jenkins.war"
    dest:  "{{ jenkins_apps_dir }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"

- name: Ensure symlink {{ jenkins_home_dir }}/plugins to {{ jenkins_plug_dir }} exists
  file:
    src:   "{{ jenkins_plug_dir }}"
    dest:  "{{ jenkins_home_dir }}/plugins"
    state: link

- name: Ensure symlink {{ jenkins_home_dir }}/workspace to {{ jenkins_work_dir }} exists
  file:
    src:   "{{ jenkins_work_dir }}"
    dest:  "{{ jenkins_home_dir }}/workspace"
    state: link

# - name: Disable Upgrade wizard
#   copy:
#     content: "{{ jenkins_version }}"
#     dest:    "{{ jenkins_home_dir }}/jenkins.install.UpgradeWizard.state"
#     owner:   "{{ jenkins_user }}"
#     group:   "{{ jenkins_group }}"
#     mode:    0644

- name: Ensure control.sh exists
  template:
    src:    controller.sh.j2
    dest:   "{{ tools_dir }}/control.sh"
    owner:  "{{ jenkins_user }}"
    group:  "{{ jenkins_group }}"
    mode:   0700

# - name: Ensure custom init scripts directory exists
#   file:
#     path:  "{{ jenkins_home_dir }}/init.groovy.d"
#     state: directory
#     owner: "{{ jenkins_user }}"
#     group: "{{ jenkins_group }}"
#     mode:  0775

# - name: Configure proxy config for Jenkins
#   template:
#     src:    proxy.xml
#     dest:   "{{ jenkins_home_dir }}/proxy.xml"
#     owner:  "{{ jenkins_user }}"
#     group:  "{{ jenkins_group }}"
#     mode:   0664
#   register: jenkins_proxy_config
#   when:
#     - jenkins_proxy_host | length > 0
#     - jenkins_proxy_port | length > 0


# - name: Disable Setup wizard
#   copy:
#     content: "{{ jenkins_version }}"
#     dest:    "{{ jenkins_home_dir }}/jenkins.install.InstallUtil.lastExecVersion"
#     owner:   "{{ jenkins_user }}"
#     group:   "{{ jenkins_group }}"
#     mode:    0644
