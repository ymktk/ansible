- name: Create group "{{ tomcat_group }}"
  group:
    name: "{{ tomcat_group }}"
    gid: "{{ tomcat_group_gid | default(omit) }}"
    state: present

- name: Create user "{{ tomcat_user }}"
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    uid: "{{ tomcat_user_uid | default(omit) }}"
    state: present

- name: Create tomcat log directory ("{{ tomcat_log_dir }}")
  file:
    path: '{{ tomcat_log_dir }}'
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"

- name: Create tomcat PID directory ("{{ tomcat_pid_dir }}")
  file:
    path: '{{ tomcat_pid_dir }}'
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: 0750

- name: Create temp download directory ("{{ tomcat_download_dir }}")
  file:
    path: '{{ tomcat_download_dir }}'
    state: directory

- name: Check if tomcat is already unarchived ("{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}")
  stat:
    path: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"
  register: is_installed

- name: Download apache-tomcat-{{ tomcat_version }}.tar.gz
  get_url:
    url: "{{ tomcat_download_URL }}/tomcat/tomcat-{{ tomcat_version.split('.')[0] }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: '{{ tomcat_download_dir }}'
    timeout: 120
  when: not is_installed.stat.exists

- name: Unarchive apache-tomcat-{{ tomcat_version }}.tar.gz at {{ tomcat_install_path }}
  unarchive:
    src:  "{{ tomcat_download_dir }}/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_install_path }}"
    remote_src: True
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    creates: "{{ tomcat_install_path }}/apache-tomcat-{{ tomcat_version }}"
  register: tomcat_installed
  when: not is_installed.stat.exists
